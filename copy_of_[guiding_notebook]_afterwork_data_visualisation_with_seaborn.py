# -*- coding: utf-8 -*-
"""Copy of [Guiding Notebook] AfterWork: Data Visualisation with Seaborn

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Pb3LS-MxM8GdbXBMBaCzAk3gVNHgv7Iy

# AfterWork Data Science: Data Visualisation with Seaborn

## 1. Business Understanding

As a data analyst working with Quick Mart chain of supermarkets, the task is to create an analysis report, complete with recommendations to guide the management team on a marketing strategy decision.

The report should include:
- Which product categories performed best.
- Which branches had the highest sales and profits
- What key trends in sales in each branch are noticeable over the time.
- The average amount spent by customers for each branch.
The average rating for each branch.

## 2. Data Exploration
"""

# Loading libraries
# ---
#
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Loading the dataset
# ---
# Dataset url = https://bit.ly/SupermarketsDS
# ---
# YOUR CODE GOES HERE

data=pd.read_csv('https://bit.ly/SupermarketsDS')
data.head()

# Determining the size
# ---
# YOUR CODE GOES HERE
data.shape
print('The data has', data.shape[0], 'rows and ', data.shape[1], 'columns')
print('The size of the data is:', data.size)

# Checking the datatypes
# ---
# YOUR CODE GOES HERE
data.dtypes

# Statistical summary
# ---
# YOUR CODE GOES HERE

data.describe()

"""## 3. Data Cleaning"""

# Checking for duplicates
# ---
# YOUR CODE GOES HERE

duplicate=data[data.duplicated()]
print(duplicate)


#data.duplicated()

# Checking for missing values
# ---
# YOUR CODE GOES HERE
#data.isnull()
print(data.isnull().sum())

print('Any  missing values anywhere:', data.isnull().values.any().any())

data_with_missing_row = data[data.isnull().any(axis=1)]
print('Missing row:', data_with_missing_row)

data_with_missing_column = data.columns[data.isnull().any()]
print('Missing column:', data_with_missing_column)

# Dropping irrelevant columns
# ---
# YOUR CODE GOES HERE
#data.drop_duplicates()
# Drop rows with any missing values (NaN)
data = data.dropna()

# Drop duplicate rows
data = data.drop_duplicates()


print('Drop empty entries')
print('Drop Duplicate')


print('The data has', data.shape[0], 'rows and', data.shape[1], 'columns')
print('The size of the data is:', data.size)

"""## 4. Data analysis and visualisation (Using Seaborn for visualisation)

We investigate the questions listed above in order to craft a fact-driven recommendation.

### 4.a) Questions
"""

data.columns

# Question 1 - Which product categories(Product_line) performed best.
# YOUR CODE GOES HERE
data.columns
data.groupby('Product line')[['gross margin percentage',  'gross income', 'Rating', 'Total']].sum().sort_values(by='gross income', ascending=False)

import seaborn as sns
import matplotlib.pyplot as plt

# Set the style for the plot
sns.set(style="whitegrid")

# Plot a histogram
fig, axes = plt.subplots(1, 2, figsize=(12, 8))
plt.subplots_adjust(wspace=0.7)

sns.histplot(data['gross income'],ax=axes[0], bins=20, kde=True, color='blue')

# Add labels and title
axes[0].set_title('gross income', fontsize=15)
axes[0].set_xlabel('gross income', fontsize=12)
axes[0].set_ylabel('Frequency', fontsize=12)

product_performance=data.groupby('Product line')[['gross margin percentage',  'gross income', 'Rating', 'Total']].sum().sort_values(by='gross income', ascending=False)

sns.barplot(y='Product line', x='gross income', ax=axes[1], data=product_performance, hue='Product line',  palette='viridis')

# Show the plot
plt.show()

# Question 2: Which branches had the highest sales and profits ?
# YOUR CODE GOES HERE

branch_performance = data.groupby('Branch')[['Total', 'gross income']].sum()
print(branch_performance.sort_values(by='gross income', ascending=False))

print(f'The branch with the highest sales profit is: C')


plt.figure(figsize=(8, 8))
branch_performance['gross income'].plot(kind='pie', autopct='%1.1f%%', startangle=90, cmap='viridis', legend=False)


plt.title('Sales Distribution by Branch', fontsize=15)


plt.show()

import matplotlib.pyplot as plt

# Extract the Total and the gros income
sales_data = branch_performance['Total']
profit_data = branch_performance['gross income']

# Create a pie chart for Sales (Total)
plt.figure(figsize=(8, 8))

# Plotting the pie chart for Total Sales
plt.subplot(1, 2, 1)
sales_data.plot(kind='pie', autopct='%1.1f%%', colors=['#FF9999', '#66B3FF', '#99FF99'], legend=False)
plt.title('Sales Distribution by Branch')

# Plotting the pie chart for Gross Income (Profits)
plt.subplot(1, 2, 2)
profit_data.plot(kind='pie', autopct='%1.1f%%', colors=['#FFCC99', '#FF6666', '#99CCFF'], legend=False)
plt.title('Profit Distribution by Branch')

# Show the pie chart
plt.tight_layout()
plt.show()

# Question 3: What key trends in sales in each branch are noticeable over the time.
# YOUR CODE GOES HERE
data.columns
print(data['Date'])

data['Date'] = pd.to_datetime(data['Date'])
#print(data)

sales_trends = data.groupby([data['Date'].dt.date, 'Branch'])['Total'].sum().reset_index()
print(sales_trends )


plt.figure(figsize=(12, 6))
sns.lineplot(data=sales_trends, x='Date', y='Total', hue='Branch', marker='o')
#sns.scatterplot(data=sales_trends, x='Date', y='Total', hue='Branch', marker='o')
# Customize the plot
plt.title('Sales Trends Over Time for Each Branch', fontsize=15)
plt.xlabel('Date', fontsize=12)
plt.ylabel('Total Sales Amount', fontsize=12)
plt.xticks(rotation=45)
plt.legend(title='Branch')
plt.savefig('sales_distribution_by_branch.png', bbox_inches='tight')
# Show the plot
plt.tight_layout()
plt.show()

# Question 4(a): The average amount spent by customers for each branch.
# YOUR CODE GOES HERE

data.columns
#average_amount = data.groupby(['Branch'])['Total'].sum().reset_index()
average_amount = data.groupby(['Branch'])['Total'].mean()
print(average_amount)
data.columns

import matplotlib.pyplot as plt
import seaborn as sns


# Apply seaborn style
sns.set_style("whitegrid")

# Create pie chart
plt.figure(figsize=(6, 6))
average_amount.plot(kind='pie', autopct='%1.1f%%', colors=['#FF9999', '#66B3FF', '#99FF99'], legend=False)
plt.title('Sales Distribution by Branch')

# Display the plot
plt.title("Seaborn Styled Pie Chart")
plt.show()

# Question 4(b):The average rating for each branch.
# YOUR CODE GOES HERE

data.columns
average_amount = data.groupby(['Branch'])['Rating'].mean().reset_index()
print(average_amount.sort_values(by='Rating', ascending=False))
data.columns

"""## 5. Summary of findings

What observations did you make from your analysis?

 Branch C has slightly better customer satisfaction compared to Branches A and B. The difference in ratings could indicate that customers at Branch C might be more satisfied with their overall shopping experience, including aspects like service, product quality, or other factors, when compared to the other branches.

Which in turn result in  Branch C performing the best in terms of average sales per transaction. The compagny might explore why customers in Branch C are spending more, such as higher-priced products or better customer engagement, payment method, promotion, customer services.


Branch A has the lowest average spending per transaction, which might indicate either lower-priced products, a different customer segment, or other factors influencing customer behavior.

Over the time, all three branches (A, B, and C) exhibit significant volatility (not a clear trend) in sales throughout the period from January 1, 2019, to April 1, 2019. This suggests that sales are subject to fluctuations, possibly due to external factors or internal promotions.

While the magnitude of sales differs between branches, they seem to follow similar general patterns of peaks and troughs. This could indicate that they are influenced by common market trends or seasonal factors.

Branch A has some of the highest sales peaks but also experiences periods of very low sales, indicating a high degree of variability.

 Branch C shows more consistent sales, with neither extremely high peaks nor very low troughs compared to Branch A. This might indicate a more stable customer base or sales strategy.

Health and Beauty has the lowest gross income, and total sales. It also has the lowest customer rating, suggesting that it may not be performing as well as other categories. The most profitable product line to the compagny is Food and beverages.
"""



"""## 6. Recommendations

What recommendations can you make from your analysis/observations?

This analysis could guide further investigation into why Branch C is performing better and why Branch B's rating is lower. Improving customer experience in Branch B could lead to higher ratings and potentially better sales and customer retention in the future.
Focus on increasing customer satisfaction and sales for  Food and beverages.

What the Compagny could do is to:

Determine the factors contributing to the sales fluctuations over time.

Analyze the correlation between the sales and marketing strategies of each branch to understand what drives their individual performance.

Research external factors (economic conditions, seasonal trends, etc.) that may be influencing sales and internal factors such as customer service etc.

Extend the analysis over a longer period to identify annual trends and seasonal patterns more accurately.
"""